{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willi\\\\Downloads\\\\Trabajo de grado 1\\\\MusicMachineLearning-Frontend\\\\Trabajo de grado\\\\Frontend\\\\src\\\\Components\\\\AudioUploader.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AudioUploader.js\nimport React, { useState } from 'react';\nimport { uploadAudio, identifyInstrument } from '../services/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = ({\n  onResultReceived\n}) => {\n  _s();\n  const [audioFile, setAudioFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const handleFileChange = e => {\n    setAudioFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!audioFile) {\n      setErrorMessage('Selecciona un archivo antes de subir.');\n      return;\n    }\n    setIsProcessing(true);\n    try {\n      const uploadResponse = await uploadAudio(audioFile);\n      const analysisResponse = await identifyInstrument(uploadResponse.id);\n      onResultReceived(analysisResponse);\n    } catch (error) {\n      setErrorMessage('Hubo un error procesando el archivo.');\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"audio/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isProcessing,\n      children: isProcessing ? 'Procesando...' : 'Subir y Analizar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioUploader, \"q/XK2e86rK464TCONpupHab/q9I=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","uploadAudio","identifyInstrument","jsxDEV","_jsxDEV","AudioUploader","onResultReceived","_s","audioFile","setAudioFile","errorMessage","setErrorMessage","isProcessing","setIsProcessing","handleFileChange","e","target","files","handleUpload","uploadResponse","analysisResponse","id","error","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Willi/Downloads/Trabajo de grado 1/MusicMachineLearning-Frontend/Trabajo de grado/Frontend/src/Components/AudioUploader.js"],"sourcesContent":["// frontend/src/components/AudioUploader.js\r\nimport React, { useState } from 'react';\r\nimport { uploadAudio, identifyInstrument } from '../services/Api';\r\n\r\nconst AudioUploader = ({ onResultReceived }) => {\r\n    const [audioFile, setAudioFile] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n    const handleFileChange = (e) => {\r\n        setAudioFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!audioFile) {\r\n            setErrorMessage('Selecciona un archivo antes de subir.');\r\n            return;\r\n        }\r\n        setIsProcessing(true);\r\n        try {\r\n            const uploadResponse = await uploadAudio(audioFile);\r\n            const analysisResponse = await identifyInstrument(uploadResponse.id);\r\n            onResultReceived(analysisResponse);\r\n        } catch (error) {\r\n            setErrorMessage('Hubo un error procesando el archivo.');\r\n        } finally {\r\n            setIsProcessing(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload} disabled={isProcessing}>\r\n                {isProcessing ? 'Procesando...' : 'Subir y Analizar'}\r\n            </button>\r\n            {errorMessage && <p>{errorMessage}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AudioUploader;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,kBAAkB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMc,gBAAgB,GAAIC,CAAC,IAAK;IAC5BN,YAAY,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACV,SAAS,EAAE;MACZG,eAAe,CAAC,uCAAuC,CAAC;MACxD;IACJ;IACAE,eAAe,CAAC,IAAI,CAAC;IACrB,IAAI;MACA,MAAMM,cAAc,GAAG,MAAMlB,WAAW,CAACO,SAAS,CAAC;MACnD,MAAMY,gBAAgB,GAAG,MAAMlB,kBAAkB,CAACiB,cAAc,CAACE,EAAE,CAAC;MACpEf,gBAAgB,CAACc,gBAAgB,CAAC;IACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZX,eAAe,CAAC,sCAAsC,CAAC;IAC3D,CAAC,SAAS;MACNE,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEZ;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE1B,OAAA;MAAQ2B,OAAO,EAAEb,YAAa;MAACc,QAAQ,EAAEpB,YAAa;MAAAW,QAAA,EACjDX,YAAY,GAAG,eAAe,GAAG;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EACRpB,YAAY,iBAAIN,OAAA;MAAAmB,QAAA,EAAIb;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd,CAAC;AAACvB,EAAA,CAnCIF,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}