{"ast":null,"code":"// frontend/src/tests/ApiTest.js\nimport { uploadAudio, identifyInstrument, getInstrumentInfo } from '../services/Api';\nconst testFileUpload = async () => {\n  const testFile = new File(['dummy content'], 'test.mp3', {\n    type: 'audio/mpeg'\n  });\n  try {\n    const response = await uploadAudio(testFile);\n    console.log('Audio uploaded successfully:', response);\n  } catch (error) {\n    console.error('Error uploading audio:', error);\n  }\n};\nconst testIdentifyInstrument = async () => {\n  try {\n    const response = await identifyInstrument(1); // Sup贸n que el ID del archivo es 1\n    console.log('Instrument identified successfully:', response);\n  } catch (error) {\n    console.error('Error identifying instrument:', error);\n  }\n};\nconst testGetInstrumentInfo = async () => {\n  try {\n    const response = await getInstrumentInfo(1); // Sup贸n que el ID del instrumento es 1\n    console.log('Instrument info retrieved successfully:', response);\n  } catch (error) {\n    console.error('Error retrieving instrument info:', error);\n  }\n};\n\n// Llama a las pruebas para ejecutarlas\ntestFileUpload();\ntestIdentifyInstrument();\ntestGetInstrumentInfo();","map":{"version":3,"names":["uploadAudio","identifyInstrument","getInstrumentInfo","testFileUpload","testFile","File","type","response","console","log","error","testIdentifyInstrument","testGetInstrumentInfo"],"sources":["C:/Users/Willi/Downloads/Trabajo de grado 1/MusicMachineLearning-Frontend/Trabajo de grado/Frontend/src/Test/ApiTest.js"],"sourcesContent":["// frontend/src/tests/ApiTest.js\r\nimport { uploadAudio, identifyInstrument, getInstrumentInfo } from '../services/Api';\r\n\r\nconst testFileUpload = async () => {\r\n    const testFile = new File(['dummy content'], 'test.mp3', { type: 'audio/mpeg' });\r\n    try {\r\n        const response = await uploadAudio(testFile);\r\n        console.log('Audio uploaded successfully:', response);\r\n    } catch (error) {\r\n        console.error('Error uploading audio:', error);\r\n    }\r\n};\r\n\r\nconst testIdentifyInstrument = async () => {\r\n    try {\r\n        const response = await identifyInstrument(1); // Sup贸n que el ID del archivo es 1\r\n        console.log('Instrument identified successfully:', response);\r\n    } catch (error) {\r\n        console.error('Error identifying instrument:', error);\r\n    }\r\n};\r\n\r\nconst testGetInstrumentInfo = async () => {\r\n    try {\r\n        const response = await getInstrumentInfo(1); // Sup贸n que el ID del instrumento es 1\r\n        console.log('Instrument info retrieved successfully:', response);\r\n    } catch (error) {\r\n        console.error('Error retrieving instrument info:', error);\r\n    }\r\n};\r\n\r\n// Llama a las pruebas para ejecutarlas\r\ntestFileUpload();\r\ntestIdentifyInstrument();\r\ntestGetInstrumentInfo();\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,kBAAkB,EAAEC,iBAAiB,QAAQ,iBAAiB;AAEpF,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAAC,eAAe,CAAC,EAAE,UAAU,EAAE;IAAEC,IAAI,EAAE;EAAa,CAAC,CAAC;EAChF,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,WAAW,CAACI,QAAQ,CAAC;IAC5CI,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC;EACzD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAClD;AACJ,CAAC;AAED,MAAMC,sBAAsB,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACA,MAAMJ,QAAQ,GAAG,MAAMN,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9CO,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,QAAQ,CAAC;EAChE,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACzD;AACJ,CAAC;AAED,MAAME,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACA,MAAML,QAAQ,GAAG,MAAML,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7CM,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,QAAQ,CAAC;EACpE,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC7D;AACJ,CAAC;;AAED;AACAP,cAAc,CAAC,CAAC;AAChBQ,sBAAsB,CAAC,CAAC;AACxBC,qBAAqB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}