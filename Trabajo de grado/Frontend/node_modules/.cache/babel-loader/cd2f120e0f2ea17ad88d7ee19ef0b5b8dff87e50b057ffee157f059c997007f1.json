{"ast":null,"code":"// frontend/src/services/api.js\nimport axios from 'axios';\nimport config from '../config/config';\nconst api = axios.create({\n  baseURL: config.apiUrl\n});\nexport const uploadAudio = async file => {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/upload/', formData);\n    return response;\n  } catch (error) {\n    console.error('Error al subir el archivo:', error);\n    throw error; // Propaga el error al componente llamador\n  }\n};\nexport const identifyInstrument = async audioId => {\n  try {\n    const response = await api.get(`/identify/${audioId}/`);\n    return response;\n  } catch (error) {\n    console.error('Error al identificar el instrumento:', error);\n    throw error; // Propaga el error al componente llamador\n  }\n};\nexport const getInstrumentInfo = async instrumentId => {\n  try {\n    const response = await api.get(`/instrument/${instrumentId}/`);\n    return response;\n  } catch (error) {\n    console.error('Error al obtener la información del instrumento:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","config","api","create","baseURL","apiUrl","uploadAudio","file","formData","FormData","append","response","post","error","console","identifyInstrument","audioId","get","getInstrumentInfo","instrumentId"],"sources":["C:/Users/Willi/Downloads/Trabajo de grado 1/MusicMachineLearning-Frontend/Trabajo de grado/Frontend/src/Services/Api.js"],"sourcesContent":["// frontend/src/services/api.js\r\nimport axios from 'axios';\r\nimport config from '../config/config';\r\n\r\nconst api = axios.create({\r\n    baseURL: config.apiUrl,\r\n});\r\n\r\nexport const uploadAudio = async (file) => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const response = await api.post('/upload/', formData);\r\n        return response;\r\n    } catch (error) {\r\n        console.error('Error al subir el archivo:', error);\r\n        throw error; // Propaga el error al componente llamador\r\n    }\r\n};\r\n\r\nexport const identifyInstrument = async (audioId) => {\r\n    try {\r\n        const response = await api.get(`/identify/${audioId}/`);\r\n        return response;\r\n    } catch (error) {\r\n        console.error('Error al identificar el instrumento:', error);\r\n        throw error; // Propaga el error al componente llamador\r\n    }\r\n};\r\n\r\nexport const getInstrumentInfo = async (instrumentId) => {\r\n    try {\r\n        const response = await api.get(`/instrument/${instrumentId}/`);\r\n        return response;\r\n    } catch (error) {\r\n        console.error('Error al obtener la información del instrumento:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AAErC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,MAAM,CAACI;AACpB,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,MAAMI,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,UAAU,EAAEJ,QAAQ,CAAC;IACrD,OAAOG,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAG,MAAOC,OAAO,IAAK;EACjD,IAAI;IACA,MAAML,QAAQ,GAAG,MAAMT,GAAG,CAACe,GAAG,CAAC,aAAaD,OAAO,GAAG,CAAC;IACvD,OAAOL,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAG,MAAOC,YAAY,IAAK;EACrD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMT,GAAG,CAACe,GAAG,CAAC,eAAeE,YAAY,GAAG,CAAC;IAC9D,OAAOR,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;IACxE,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}