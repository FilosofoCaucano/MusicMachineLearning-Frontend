{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willi\\\\Downloads\\\\Trabajo de grado 1\\\\MusicMachineLearning-Frontend\\\\Trabajo de grado\\\\Frontend\\\\src\\\\Components\\\\AudioUploader.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AudioUploader.js\nimport React, { useState } from 'react';\nimport { identifyInstrument } from '../Services/Api';\nimport './AudioUploader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = ({\n  onInstrumentIdentified\n}) => {\n  _s();\n  const [audioFile, setAudioFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (!file) {\n      setErrorMessage('Por favor selecciona un archivo.');\n      return;\n    }\n    if (!file.type.startsWith('audio/')) {\n      setErrorMessage('El archivo debe ser un archivo de audio válido.');\n      return;\n    }\n    setErrorMessage('');\n    setAudioFile(file);\n  };\n  const handleUpload = async () => {\n    if (!audioFile) {\n      setErrorMessage('Por favor selecciona un archivo antes de subir.');\n      return;\n    }\n    setIsUploading(true);\n    setErrorMessage('');\n    const formData = new FormData();\n    formData.append('file', audioFile);\n    try {\n      const response = await identifyInstrument(formData);\n      console.log('Respuesta del servidor:', response);\n      if (response.results) {\n        onInstrumentIdentified(response.results);\n      } else {\n        setErrorMessage('Error en la respuesta del servidor. No se encontraron resultados.');\n      }\n    } catch (error) {\n      console.error('Error al subir el archivo:', error);\n      setErrorMessage('Hubo un error procesando el archivo.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const handleFileUpload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const response = await fetch(\"http://127.0.0.1:8000/api/upload/\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(\"Error en la respuesta del servidor\");\n      }\n      const data = await response.json();\n      if (data.predicted_class !== undefined && data.probabilities) {\n        console.log(\"Resultados:\", data);\n        setResults({\n          class: data.predicted_class,\n          probabilities: data.probabilities\n        });\n      } else {\n        throw new Error(\"No se encontraron resultados\");\n      }\n    } catch (error) {\n      console.error(\"Error al procesar el archivo:\", error);\n      setErrorMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isUploading,\n      children: isUploading ? 'Procesando...' : 'Subir y Clasificar'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioUploader, \"oUM20npI4OSOx1LlVnNrd/6TBx4=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","identifyInstrument","jsxDEV","_jsxDEV","AudioUploader","onInstrumentIdentified","_s","audioFile","setAudioFile","isUploading","setIsUploading","errorMessage","setErrorMessage","handleFileChange","e","file","target","files","type","startsWith","handleUpload","formData","FormData","append","response","console","log","results","error","handleFileUpload","fetch","method","body","ok","Error","data","json","predicted_class","undefined","probabilities","setResults","class","message","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Willi/Downloads/Trabajo de grado 1/MusicMachineLearning-Frontend/Trabajo de grado/Frontend/src/Components/AudioUploader.js"],"sourcesContent":["// frontend/src/components/AudioUploader.js\r\nimport React, { useState } from 'react';\r\nimport { identifyInstrument } from '../Services/Api';\r\nimport './AudioUploader.css';\r\n\r\nconst AudioUploader = ({ onInstrumentIdentified }) => {\r\n    const [audioFile, setAudioFile] = useState(null);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (!file) {\r\n            setErrorMessage('Por favor selecciona un archivo.');\r\n            return;\r\n        }\r\n        if (!file.type.startsWith('audio/')) {\r\n            setErrorMessage('El archivo debe ser un archivo de audio válido.');\r\n            return;\r\n        }\r\n        setErrorMessage('');\r\n        setAudioFile(file);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!audioFile) {\r\n            setErrorMessage('Por favor selecciona un archivo antes de subir.');\r\n            return;\r\n        }\r\n\r\n        setIsUploading(true);\r\n        setErrorMessage('');\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', audioFile);\r\n\r\n        try {\r\n            const response = await identifyInstrument(formData);\r\n            console.log('Respuesta del servidor:', response);\r\n\r\n            if (response.results) {\r\n                onInstrumentIdentified(response.results);\r\n            } else {\r\n                setErrorMessage('Error en la respuesta del servidor. No se encontraron resultados.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al subir el archivo:', error);\r\n            setErrorMessage('Hubo un error procesando el archivo.');\r\n        } finally {\r\n            setIsUploading(false);\r\n        }\r\n    };\r\n\r\n    const handleFileUpload = async (file) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append(\"file\", file);\r\n\r\n            const response = await fetch(\"http://127.0.0.1:8000/api/upload/\", {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Error en la respuesta del servidor\");\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.predicted_class !== undefined && data.probabilities) {\r\n                console.log(\"Resultados:\", data);\r\n                setResults({\r\n                    class: data.predicted_class,\r\n                    probabilities: data.probabilities,\r\n                });\r\n            } else {\r\n                throw new Error(\"No se encontraron resultados\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error al procesar el archivo:\", error);\r\n            setErrorMessage(error.message);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"audio-uploader\">\r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload} disabled={isUploading}>\r\n                {isUploading ? 'Procesando...' : 'Subir y Clasificar'}\r\n            </button>\r\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AudioUploader;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}