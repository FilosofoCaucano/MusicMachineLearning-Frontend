{"ast":null,"code":"// frontend/src/services/api.js\n// frontend/src/services/api.js\nimport axios from 'axios';\nimport config from '../Config/Config';\nconst api = axios.create({\n  baseURL: config.apiUrl // Asegúrate de que config.apiUrl apunta correctamente al backend\n});\n\n// Subir un archivo de audio al backend\nexport const uploadAudio = async file => {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post('/upload/', formData); // Ruta de backend para subir audio\n    return response.data; // Devuelve los datos\n  } catch (error) {\n    console.error('Error al subir el archivo:', error);\n    throw error;\n  }\n};\n\n// Identificar un instrumento basado en el ID del archivo de audio\nexport const identifyInstrument = async audioId => {\n  try {\n    const response = await api.get(`/identify/${audioId}/`); // Ruta de backend para identificar instrumento\n    return response.data; // Devuelve los datos\n  } catch (error) {\n    console.error('Error al identificar el instrumento:', error);\n    throw error;\n  }\n};\n\n// Obtener información detallada sobre un instrumento\nexport const getInstrumentInfo = async instrumentId => {\n  try {\n    const response = await api.get(`/instrument/${instrumentId}/`); // Ruta de backend para obtener información de instrumento\n    return response.data; // Devuelve los datos\n  } catch (error) {\n    console.error('Error al obtener la información del instrumento:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","config","api","create","baseURL","apiUrl","uploadAudio","file","formData","FormData","append","response","post","data","error","console","identifyInstrument","audioId","get","getInstrumentInfo","instrumentId"],"sources":["C:/Users/Willi/Downloads/Trabajo de grado 1/MusicMachineLearning-Frontend/Trabajo de grado/Frontend/src/Services/Api.js"],"sourcesContent":["// frontend/src/services/api.js\r\n// frontend/src/services/api.js\r\nimport axios from 'axios';\r\nimport config from '../Config/Config';\r\n\r\nconst api = axios.create({\r\n    baseURL: config.apiUrl, // Asegúrate de que config.apiUrl apunta correctamente al backend\r\n});\r\n\r\n// Subir un archivo de audio al backend\r\nexport const uploadAudio = async (file) => {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        const response = await api.post('/upload/', formData); // Ruta de backend para subir audio\r\n        return response.data; // Devuelve los datos\r\n    } catch (error) {\r\n        console.error('Error al subir el archivo:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Identificar un instrumento basado en el ID del archivo de audio\r\nexport const identifyInstrument = async (audioId) => {\r\n    try {\r\n        const response = await api.get(`/identify/${audioId}/`); // Ruta de backend para identificar instrumento\r\n        return response.data; // Devuelve los datos\r\n    } catch (error) {\r\n        console.error('Error al identificar el instrumento:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Obtener información detallada sobre un instrumento\r\nexport const getInstrumentInfo = async (instrumentId) => {\r\n    try {\r\n        const response = await api.get(`/instrument/${instrumentId}/`); // Ruta de backend para obtener información de instrumento\r\n        return response.data; // Devuelve los datos\r\n    } catch (error) {\r\n        console.error('Error al obtener la información del instrumento:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;AAErC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACrBC,OAAO,EAAEH,MAAM,CAACI,MAAM,CAAE;AAC5B,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,MAAMI,QAAQ,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,UAAU,EAAEJ,QAAQ,CAAC,CAAC,CAAC;IACvD,OAAOG,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,kBAAkB,GAAG,MAAOC,OAAO,IAAK;EACjD,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMT,GAAG,CAACgB,GAAG,CAAC,aAAaD,OAAO,GAAG,CAAC,CAAC,CAAC;IACzD,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC5D,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,iBAAiB,GAAG,MAAOC,YAAY,IAAK;EACrD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMT,GAAG,CAACgB,GAAG,CAAC,eAAeE,YAAY,GAAG,CAAC,CAAC,CAAC;IAChE,OAAOT,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;IACxE,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}